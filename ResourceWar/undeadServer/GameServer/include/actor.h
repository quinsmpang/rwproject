#ifndef __ACTOR_H
#define __ACTOR_H
#include "auto_actor.h"
#include "server_structsend_auto.h"
// ------------------------------- actor.c -----------------------------------
// 服务器所有角色初始化
int actors_init();

// 所有在线角色保存
int actors_save_everyone( char type );

// 服务器崩溃之后的存档
void actors_on_core();

// 保存角色数据
int actor_save( int actor_index, FILE *fp );

// 开始保存角色数据
int actor_real_saveall( int actor_index, FILE *fp );

// 发送保存信息到队列
int actor_send_save( int actor_index );

// 角色发送下线信息到队列
int actor_send_remove( int actor_index );

// 角色下线保存并断开客户端
int actor_remove( int actor_index );

// 更新角色列表数据
int actor_update_list( int actor_index );

// 更新数据库中角色在线情况
int actor_update_online( int actorid, char isonline );

// 清除客户端
int actor_del( int client_index );

// 真正的删除角色
int actor_delete( i64 userid, int actorid );

// 设置删除标记
int actor_delete_stoptime( i64 userid, int actorid );

// 放弃删除
int actor_delete_cancel( int actorid );

// 所有角色逻辑
void actors_logic();

// 角色逻辑
void actor_logic( int actor_index );

// 角色进入游戏
int actor_entergame( int client_index, int actorid );

// 角色进入游戏世界
int actor_enterworld( int client_index, int actorid, int actor_index );

// 角色进入游戏后读取数据
int actor_load( int actor_index, int actorid );

// 第一次进入游戏要初始化角色信息
int actor_new( int actor_index );

// 创建角色
int actor_create( int client_index, int aclass, char *szActorName );

// 创建角色,数据库
int actor_db_create( int client_index, int platid, i64 userid, char *username, SLK_ListInfo *pListInfo );


// ------------------------------- actor_func.c -----------------------------------
// 根据索引获取用户id
i64 actor_getoffline_userid( int actorid );

// 根据编号获取玩家索引
int actor_getindex_withid( int actorid );

// 返回角色列表
int actor_getlist( int platid, i64 userid, SLK_NetS_List *pValue );

// 验证一下这个角色id是不是属于登陆的这个用户
int actor_verifyid( i64 userid, int actorid );

// 玩家聊天
int actor_talk( int actor_index, char type, char *szMsg, int msgsize );

// 聊天屏蔽列表
int actor_talk_chat_mask_list( int actor_index );
int actor_talk_chat_mask_list_add( int actor_index, int actorid );
int actor_talk_chat_mask_list_del( int actor_index, int actorid );

// 角色信息
int actor_getinfo( int actor_index );

// ------------------------------- actor_gmcmd.c -----------------------------------
int actor_command( int actor_index, short cmd, int *pValue, char *pMsg );


#endif
